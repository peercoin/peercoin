/* DO NOT EDIT: automatically built by dist/s_include. */
#ifndef	_txn_ext_h_
#define	_txn_ext_h_
#if defined(__cplusplus)
extern "C" {
#endif
#define	__txn_begin __txn_begin@DB_VERSION_UNIQUE_NAME@
int __txn_begin __P((DB_ENV *, DB_TXN *, DB_TXN **, u_int32_t));
#define	__txn_xa_begin __txn_xa_begin@DB_VERSION_UNIQUE_NAME@
int __txn_xa_begin __P((DB_ENV *, DB_TXN *));
#define	__txn_compensate_begin __txn_compensate_begin@DB_VERSION_UNIQUE_NAME@
int __txn_compensate_begin __P((DB_ENV *, DB_TXN **txnp));
#define	__txn_commit __txn_commit@DB_VERSION_UNIQUE_NAME@
int __txn_commit __P((DB_TXN *, u_int32_t));
#define	__txn_abort __txn_abort@DB_VERSION_UNIQUE_NAME@
int __txn_abort __P((DB_TXN *));
#define	__txn_discard __txn_discard@DB_VERSION_UNIQUE_NAME@
int __txn_discard __P((DB_TXN *, u_int32_t flags));
#define	__txn_prepare __txn_prepare@DB_VERSION_UNIQUE_NAME@
int __txn_prepare __P((DB_TXN *, u_int8_t *));
#define	__txn_id __txn_id@DB_VERSION_UNIQUE_NAME@
u_int32_t __txn_id __P((DB_TXN *));
#define	__txn_checkpoint __txn_checkpoint@DB_VERSION_UNIQUE_NAME@
int __txn_checkpoint __P((DB_ENV *, u_int32_t, u_int32_t, u_int32_t));
#define	__txn_getckp __txn_getckp@DB_VERSION_UNIQUE_NAME@
int __txn_getckp __P((DB_ENV *, DB_LSN *));
#define	__txn_activekids __txn_activekids@DB_VERSION_UNIQUE_NAME@
int __txn_activekids __P((DB_ENV *, u_int32_t, DB_TXN *));
#define	__txn_force_abort __txn_force_abort@DB_VERSION_UNIQUE_NAME@
void __txn_force_abort __P((u_int8_t *));
#define	__txn_preclose __txn_preclose@DB_VERSION_UNIQUE_NAME@
void __txn_preclose __P((DB_ENV *));
#define	__txn_regop_log __txn_regop_log@DB_VERSION_UNIQUE_NAME@
int __txn_regop_log __P((DB_ENV *, DB_TXN *, DB_LSN *, u_int32_t, u_int32_t, int32_t));
#define	__txn_regop_getpgnos __txn_regop_getpgnos@DB_VERSION_UNIQUE_NAME@
int __txn_regop_getpgnos __P((DB_ENV *, DBT *, DB_LSN *, db_recops, void *));
#define	__txn_regop_print __txn_regop_print@DB_VERSION_UNIQUE_NAME@
int __txn_regop_print __P((DB_ENV *, DBT *, DB_LSN *, db_recops, void *));
#define	__txn_regop_read __txn_regop_read@DB_VERSION_UNIQUE_NAME@
int __txn_regop_read __P((DB_ENV *, void *, __txn_regop_args **));
#define	__txn_ckp_log __txn_ckp_log@DB_VERSION_UNIQUE_NAME@
int __txn_ckp_log __P((DB_ENV *, DB_TXN *, DB_LSN *, u_int32_t, DB_LSN *, DB_LSN *, int32_t));
#define	__txn_ckp_getpgnos __txn_ckp_getpgnos@DB_VERSION_UNIQUE_NAME@
int __txn_ckp_getpgnos __P((DB_ENV *, DBT *, DB_LSN *, db_recops, void *));
#define	__txn_ckp_print __txn_ckp_print@DB_VERSION_UNIQUE_NAME@
int __txn_ckp_print __P((DB_ENV *, DBT *, DB_LSN *, db_recops, void *));
#define	__txn_ckp_read __txn_ckp_read@DB_VERSION_UNIQUE_NAME@
int __txn_ckp_read __P((DB_ENV *, void *, __txn_ckp_args **));
#define	__txn_xa_regop_log __txn_xa_regop_log@DB_VERSION_UNIQUE_NAME@
int __txn_xa_regop_log __P((DB_ENV *, DB_TXN *, DB_LSN *, u_int32_t, u_int32_t, const DBT *, int32_t, u_int32_t, u_int32_t, DB_LSN *));
#define	__txn_xa_regop_getpgnos __txn_xa_regop_getpgnos@DB_VERSION_UNIQUE_NAME@
int __txn_xa_regop_getpgnos __P((DB_ENV *, DBT *, DB_LSN *, db_recops, void *));
#define	__txn_xa_regop_print __txn_xa_regop_print@DB_VERSION_UNIQUE_NAME@
int __txn_xa_regop_print __P((DB_ENV *, DBT *, DB_LSN *, db_recops, void *));
#define	__txn_xa_regop_read __txn_xa_regop_read@DB_VERSION_UNIQUE_NAME@
int __txn_xa_regop_read __P((DB_ENV *, void *, __txn_xa_regop_args **));
#define	__txn_child_log __txn_child_log@DB_VERSION_UNIQUE_NAME@
int __txn_child_log __P((DB_ENV *, DB_TXN *, DB_LSN *, u_int32_t, u_int32_t, DB_LSN *));
#define	__txn_child_getpgnos __txn_child_getpgnos@DB_VERSION_UNIQUE_NAME@
int __txn_child_getpgnos __P((DB_ENV *, DBT *, DB_LSN *, db_recops, void *));
#define	__txn_child_print __txn_child_print@DB_VERSION_UNIQUE_NAME@
int __txn_child_print __P((DB_ENV *, DBT *, DB_LSN *, db_recops, void *));
#define	__txn_child_read __txn_child_read@DB_VERSION_UNIQUE_NAME@
int __txn_child_read __P((DB_ENV *, void *, __txn_child_args **));
#define	__txn_init_print __txn_init_print@DB_VERSION_UNIQUE_NAME@
int __txn_init_print __P((DB_ENV *, int (***)(DB_ENV *, DBT *, DB_LSN *, db_recops, void *), size_t *));
#define	__txn_init_getpgnos __txn_init_getpgnos@DB_VERSION_UNIQUE_NAME@
int __txn_init_getpgnos __P((DB_ENV *, int (***)(DB_ENV *, DBT *, DB_LSN *, db_recops, void *), size_t *));
#define	__txn_init_recover __txn_init_recover@DB_VERSION_UNIQUE_NAME@
int __txn_init_recover __P((DB_ENV *));
#define	__txn_dbenv_create __txn_dbenv_create@DB_VERSION_UNIQUE_NAME@
void __txn_dbenv_create __P((DB_ENV *));
#define	__txn_regop_recover __txn_regop_recover@DB_VERSION_UNIQUE_NAME@
int __txn_regop_recover __P((DB_ENV *, DBT *, DB_LSN *, db_recops, void *));
#define	__txn_xa_regop_recover __txn_xa_regop_recover@DB_VERSION_UNIQUE_NAME@
int __txn_xa_regop_recover __P((DB_ENV *, DBT *, DB_LSN *, db_recops, void *));
#define	__txn_ckp_recover __txn_ckp_recover@DB_VERSION_UNIQUE_NAME@
int __txn_ckp_recover __P((DB_ENV *, DBT *, DB_LSN *, db_recops, void *));
#define	__txn_child_recover __txn_child_recover@DB_VERSION_UNIQUE_NAME@
int __txn_child_recover __P((DB_ENV *, DBT *, DB_LSN *, db_recops, void *));
#define	__txn_continue __txn_continue@DB_VERSION_UNIQUE_NAME@
void __txn_continue __P((DB_ENV *, DB_TXN *, TXN_DETAIL *, size_t));
#define	__txn_map_gid __txn_map_gid@DB_VERSION_UNIQUE_NAME@
int __txn_map_gid __P((DB_ENV *, u_int8_t *, TXN_DETAIL **, size_t *));
#define	__txn_recover __txn_recover@DB_VERSION_UNIQUE_NAME@
int __txn_recover __P((DB_ENV *, DB_PREPLIST *, long, long *, u_int32_t));
#define	__txn_get_prepared __txn_get_prepared@DB_VERSION_UNIQUE_NAME@
int __txn_get_prepared __P((DB_ENV *, XID *, DB_PREPLIST *, long, long *, u_int32_t));
#define	__txn_open __txn_open@DB_VERSION_UNIQUE_NAME@
int __txn_open __P((DB_ENV *));
#define	__txn_dbenv_refresh __txn_dbenv_refresh@DB_VERSION_UNIQUE_NAME@
int __txn_dbenv_refresh __P((DB_ENV *));
#define	__txn_region_destroy __txn_region_destroy@DB_VERSION_UNIQUE_NAME@
void __txn_region_destroy __P((DB_ENV *, REGINFO *));
#define	__txn_id_set __txn_id_set@DB_VERSION_UNIQUE_NAME@
int __txn_id_set __P((DB_ENV *, u_int32_t, u_int32_t));
#define	__txn_stat __txn_stat@DB_VERSION_UNIQUE_NAME@
int __txn_stat __P((DB_ENV *, DB_TXN_STAT **, u_int32_t));
#define	__txn_closeevent __txn_closeevent@DB_VERSION_UNIQUE_NAME@
int __txn_closeevent __P((DB_ENV *, DB_TXN *, DB *, u_int32_t));
#define	__txn_remevent __txn_remevent@DB_VERSION_UNIQUE_NAME@
int __txn_remevent __P((DB_ENV *, DB_TXN *, const char *));
#define	__txn_lockevent __txn_lockevent@DB_VERSION_UNIQUE_NAME@
int __txn_lockevent __P((DB_ENV *, DB_TXN *, DB_LOCK *, u_int32_t, TXN_EVENT_T));
#define	__txn_doevents __txn_doevents@DB_VERSION_UNIQUE_NAME@
int __txn_doevents __P((DB_ENV *, DB_TXN *, int, int));
#if defined(__cplusplus)
}
#endif
#endif /* _txn_ext_h_ */
